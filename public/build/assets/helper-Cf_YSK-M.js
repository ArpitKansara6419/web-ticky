import{i as o}from"./axios-DLhqr1Z7.js";import"./axios-DGDcxXwr.js";const d={get:s("GET"),post:s("POST"),put:s("PUT"),delete:s("DELETE"),patch:s("PATCH")};function s(e){return async(t,n,r="json",i=!1)=>{e==="PUT"&&r==="form"&&(n._method="PUT");const a={method:e==="PUT"&&r==="form"?"POST":e,headers:c(t,r)};return n&&(e==="GET"?a.params=n:a.data=r=="form"?n:JSON.stringify(n)),i&&(a.responseType="blob"),o(t,a).then(u).catch(f)}}function c(e,t){return{"Content-Type":t=="form"?"multipart/form-data":"application/json"}}async function u(e){return e?e==null?void 0:e.data:Promise.reject("something went wrong")}async function f(e){if(e===null)return Promise.reject("Unrecoverable error!! Error is null!");const t=e==null?void 0:e.response;if(e.code==="ERR_NETWORK")return Promise.reject("connection problems..");if(e.code==="ERR_CANCELED")return Promise.reject("connection canceled..");if(t){const n=t==null?void 0:t.status,r=t==null?void 0:t.data;if(n===404)return Promise.reject("The requested resource does not exist or has been deleted");if(n===401)return Promise.reject(r.message);if(r){const i=r&&r.message||t.status;return Promise.reject(i)}else return Promise.reject("something went wrong")}}export{d as f};
